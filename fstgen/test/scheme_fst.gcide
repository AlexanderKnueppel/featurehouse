program	:	(form)*
		;
		
form	:	definition
		|	expression
		; 
		
definition	:	variable_definition
			|	syntax_definition
			|	"begin" (definition)*
			|	"let-syntax" (syntax_binding)* (definition)*
			|	"letrec-syntax" (syntax_binding)* (definition)*
			|	derived_definition
			;
			
variable_definition	:	"define" variable expression
					|	"define" variable (variable)* body
					|	"define" variable (variable)* "." (variable) body
					;

variable	:	identifier
			;
			
body	:	(definition)* (expression)+
		;
		
syntax_definition	:	"define-syntax" keyword transformer_expression
					;
					
keyword	:	identifier
		;

syntax_binding	:	keyword transformer_expression
				;
				
expression	:	constant
			|	variable
			|	"quote" datum 
			|	"'" datum
			|	"lambda" formals body
			|	"if" expression expression expression>
			| 	"if" expression expression
			|	"set!" variable expression
			|	application
			|	"let-syntax" (syntax_binding)* (expression)+
			|	"letrec-syntax" (syntax_binding)* (expression)+
			|	derived_expression
			;
			
constant	:	boolean
			|	number
			|	character
			|	string
			;

formals	:	variable
		|	(variable)*
		|	(variable)+ "." variable
		;
		
application	:	expression (expression)*
			;	

