/* Generated By:JavaCC: Do not edit this line. Scheme2ParserTokenManager.java */
package tmp.generated_scheme2;
import cide.gparser.CharStream;
import cide.gparser.Token;
import cide.gparser.TokenMgrError;
public class Scheme2ParserTokenManager implements Scheme2ParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x17b00000L) != 0L)
         {
            jjmatchedKind = 47;
            return 14;
         }
         if ((active0 & 0x3e8480000L) != 0L)
         {
            jjmatchedKind = 47;
            return 350;
         }
         if ((active0 & 0x20000L) != 0L)
            return 16;
         if ((active0 & 0x5fff8L) != 0L)
            return 14;
         if ((active0 & 0xc00000000L) != 0L || (active1 & 0x200L) != 0L)
            return 19;
         if ((active0 & 0x2L) != 0L)
            return 22;
         if ((active0 & 0x4L) != 0L)
            return 0;
         return -1;
      case 1:
         if ((active0 & 0x1a040000L) != 0L)
            return 14;
         if ((active0 & 0x65b00000L) != 0L)
         {
            jjmatchedKind = 47;
            jjmatchedPos = 1;
            return 14;
         }
         if ((active0 & 0x80000000L) != 0L)
         {
            jjmatchedKind = 47;
            jjmatchedPos = 1;
            return 351;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 47;
            jjmatchedPos = 1;
            return 350;
         }
         if ((active0 & 0x200480000L) != 0L)
         {
            jjmatchedKind = 47;
            jjmatchedPos = 1;
            return 352;
         }
         return -1;
      case 2:
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 47;
               jjmatchedPos = 2;
            }
            return 351;
         }
         if ((active0 & 0x400000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 47;
               jjmatchedPos = 2;
            }
            return 352;
         }
         if ((active0 & 0x20300000L) != 0L)
            return 14;
         if ((active0 & 0xc5880000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 47;
               jjmatchedPos = 2;
            }
            return 14;
         }
         return -1;
      case 3:
         if ((active0 & 0x100000000L) != 0L)
            return 353;
         if ((active0 & 0xc4000000L) != 0L)
            return 14;
         if ((active0 & 0x1e80000L) != 0L)
         {
            jjmatchedKind = 47;
            jjmatchedPos = 3;
            return 14;
         }
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 47;
            jjmatchedPos = 3;
            return 353;
         }
         return -1;
      case 4:
         if ((active0 & 0x1600000L) != 0L)
         {
            jjmatchedKind = 47;
            jjmatchedPos = 4;
            return 14;
         }
         if ((active0 & 0x200880000L) != 0L)
            return 14;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 9:
         return jjStopAtPos(0, 42);
      case 10:
         return jjStopAtPos(0, 43);
      case 13:
         return jjStopAtPos(0, 44);
      case 32:
         return jjStopAtPos(0, 41);
      case 33:
         return jjStartNfaWithStates_0(0, 3, 14);
      case 35:
         return jjMoveStringLiteralDfa1_0(0xc00000000L, 0x200L);
      case 36:
         return jjStartNfaWithStates_0(0, 4, 14);
      case 37:
         return jjStartNfaWithStates_0(0, 5, 14);
      case 38:
         return jjStartNfaWithStates_0(0, 6, 14);
      case 39:
         return jjStopAtPos(0, 36);
      case 40:
         return jjStopAtPos(0, 71);
      case 41:
         return jjStopAtPos(0, 72);
      case 42:
         return jjStartNfaWithStates_0(0, 7, 14);
      case 43:
         return jjStartNfaWithStates_0(0, 1, 22);
      case 44:
         jjmatchedKind = 38;
         return jjMoveStringLiteralDfa1_0(0x8000000000L, 0x0L);
      case 45:
         return jjStartNfaWithStates_0(0, 2, 0);
      case 46:
         return jjStartNfaWithStates_0(0, 17, 16);
      case 47:
         return jjStartNfaWithStates_0(0, 8, 14);
      case 58:
         return jjStartNfaWithStates_0(0, 9, 14);
      case 60:
         return jjStartNfaWithStates_0(0, 10, 14);
      case 61:
         jjmatchedKind = 11;
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      case 62:
         return jjStartNfaWithStates_0(0, 12, 14);
      case 63:
         return jjStartNfaWithStates_0(0, 13, 14);
      case 64:
         return jjStopAtPos(0, 40);
      case 94:
         return jjStartNfaWithStates_0(0, 16, 14);
      case 95:
         return jjStartNfaWithStates_0(0, 15, 14);
      case 96:
         return jjStopAtPos(0, 37);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x20000000L, 0x0L);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x80000L, 0x0L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x140000000L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x208400000L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x80000000L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x1300000L, 0x0L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x10000000L, 0x0L);
      case 113:
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x4000000L, 0x0L);
      case 126:
         return jjStartNfaWithStates_0(0, 14, 14);
      default :
         return jjMoveNfa_0(5, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(1, 73);
         break;
      case 62:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(1, 18, 14);
         break;
      case 64:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(1, 39);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x101000000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x204780000L, active1, 0L);
      case 102:
         if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(1, 25, 14);
         else if ((active0 & 0x800000000L) != 0L)
            return jjStopAtPos(1, 35);
         break;
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000L, active1, 0L);
      case 111:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(1, 27, 14);
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000L, active1, 0L);
      case 114:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(1, 28, 14);
         break;
      case 116:
         if ((active0 & 0x400000000L) != 0L)
            return jjStopAtPos(1, 34);
         break;
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(2, 29, 14);
         break;
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L);
      case 103:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x180000000L);
      case 116:
         if ((active0 & 0x100000L) != 0L)
         {
            jjmatchedKind = 20;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0x4200000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 33:
         if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(3, 26, 14);
         break;
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000L);
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000L);
      case 100:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(3, 30, 14);
         break;
      case 101:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(3, 31, 14);
         else if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(3, 32, 353);
         break;
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x480000L);
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000L);
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000L);
      case 101:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(4, 23, 14);
         return jjMoveStringLiteralDfa5_0(active0, 0x200000L);
      case 110:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(4, 19, 14);
         return jjMoveStringLiteralDfa5_0(active0, 0x400000L);
      case 121:
         if ((active0 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(4, 33, 14);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L);
}
private final int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(5, 24, 14);
         break;
      case 99:
         if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(5, 21, 14);
         break;
      case 101:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(5, 22, 14);
         break;
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 350;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 353:
                  if ((0xf7ffec7200000000L & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAdd(14);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 184);
                  else if (curChar == 45)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 43)
                     jjCheckNAddStates(3, 5);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 145);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(270, 105);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(244);
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(6, 17);
                  }
                  else if (curChar == 46)
                     jjCheckNAdd(57);
                  else if (curChar == 45)
                     jjCheckNAddStates(18, 20);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(21, 33);
                  else if (curChar == 46)
                     jjCheckNAdd(179);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(34, 46);
                  else if (curChar == 46)
                     jjCheckNAdd(140);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(47, 59);
                  else if (curChar == 46)
                     jjCheckNAdd(100);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(60, 72);
                  else if (curChar == 46)
                     jjCheckNAdd(95);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(73, 76);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 15;
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(77, 80);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(81, 84);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(85, 87);
                  }
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(88, 138);
                  }
                  else if ((0xf400847200000000L & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAdd(14);
                  }
                  else if ((0x280000000000L & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAddStates(139, 146);
                  }
                  else if (curChar == 35)
                     jjCheckNAddStates(147, 159);
                  else if (curChar == 46)
                     jjCheckNAddStates(160, 163);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(92, 93);
                  if (curChar == 45)
                     jjCheckNAddStates(164, 166);
                  else if (curChar == 43)
                     jjCheckNAddStates(167, 169);
                  else if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 19;
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 16;
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 351:
                  if ((0xf7ffec7200000000L & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAdd(14);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 184);
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(322);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 145);
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(296);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(270, 105);
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(270);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(244);
                  }
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(244);
                  break;
               case 22:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(6, 17);
                  }
                  else if (curChar == 46)
                     jjCheckNAdd(23);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(21, 33);
                  else if (curChar == 46)
                     jjCheckNAdd(179);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(34, 46);
                  else if (curChar == 46)
                     jjCheckNAdd(140);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(47, 59);
                  else if (curChar == 46)
                     jjCheckNAdd(100);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(170, 182);
                  else if (curChar == 46)
                     jjCheckNAdd(95);
                  break;
               case 352:
                  if ((0xf7ffec7200000000L & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAdd(14);
                  }
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(319, 320);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 184);
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(322);
                  else if (curChar == 46)
                     jjCheckNAddStates(183, 186);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(305, 306);
                  else if (curChar == 47)
                     jjCheckNAdd(302);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(187, 189);
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(296);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(300, 301);
                  else if (curChar == 46)
                     jjCheckNAddStates(190, 193);
                  else if (curChar == 47)
                     jjCheckNAdd(276);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(311, 312);
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(270);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(298, 184);
                  else if (curChar == 46)
                     jjCheckNAddStates(194, 197);
                  else if (curChar == 47)
                     jjCheckNAdd(250);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(304, 305);
                  else if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(244);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(293, 294);
                  else if (curChar == 46)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(198, 200);
                  }
                  else if (curChar == 47)
                     jjCheckNAdd(224);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(201, 203);
                  else if (curChar == 45)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 43)
                     jjCheckNAddStates(3, 5);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(279, 280);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(204, 206);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(274, 275);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 145);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(272, 145);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(207, 209);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(267, 268);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(285, 286);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(253, 254);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(278, 279);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(248, 249);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(210, 212);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(246, 105);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(213, 215);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(241, 242);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(270, 105);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(227, 228);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(216, 218);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(222, 223);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(259, 260);
                  else if (curChar == 35)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(220);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(252, 253);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(219, 221);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(222, 224);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(244);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(225, 227);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(233, 234);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(226, 227);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(228, 230);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddTwoStates(219, 220);
                  }
                  break;
               case 350:
                  if ((0xf7ffec7200000000L & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAdd(14);
                  }
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(319, 320);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(187, 189);
                  else if (curChar == 45)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 46)
                     jjCheckNAddStates(183, 186);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(305, 306);
                  else if (curChar == 47)
                     jjCheckNAdd(302);
                  else if (curChar == 43)
                     jjCheckNAddStates(3, 5);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(311, 312);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(300, 301);
                  else if (curChar == 46)
                     jjCheckNAddStates(190, 193);
                  else if (curChar == 47)
                     jjCheckNAdd(276);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(304, 305);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(298, 184);
                  else if (curChar == 46)
                     jjCheckNAddStates(194, 197);
                  else if (curChar == 47)
                     jjCheckNAdd(250);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(201, 203);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(293, 294);
                  else if (curChar == 46)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(198, 200);
                  }
                  else if (curChar == 47)
                     jjCheckNAdd(224);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(204, 206);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(279, 280);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(207, 209);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(274, 275);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(285, 286);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(272, 145);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(278, 279);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(267, 268);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(210, 212);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(253, 254);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(213, 215);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(248, 249);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(216, 218);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(246, 105);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(259, 260);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(241, 242);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(252, 253);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(227, 228);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(219, 221);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(222, 223);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(222, 224);
                  else if (curChar == 35)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(220);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(225, 227);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(233, 234);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(226, 227);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(228, 230);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddTwoStates(219, 220);
                  }
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddStates(18, 20);
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 45)
                     kind = 45;
                  break;
               case 3:
                  if (curChar == 10 && kind > 45)
                     kind = 45;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 7:
                  if ((0xffffdfffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 8:
                  if (curChar == 45)
                     jjCheckNAddStates(231, 233);
                  break;
               case 9:
               case 10:
                  if ((0xffffdfffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(10, 8);
                  break;
               case 13:
                  if ((0xf400847200000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAdd(14);
                  break;
               case 14:
                  if ((0xf7ffec7200000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAdd(14);
                  break;
               case 15:
                  if (curChar == 46 && kind > 47)
                     kind = 47;
                  break;
               case 17:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 20:
                  if (curChar == 43)
                     jjCheckNAddStates(167, 169);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(234, 237);
                  break;
               case 24:
                  if (curChar == 35)
                     jjCheckNAddStates(238, 240);
                  break;
               case 26:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(27);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(27, 21);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(170, 182);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(241, 243);
                  break;
               case 30:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(30, 21);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(244, 246);
                  break;
               case 32:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 33:
                  if (curChar == 47)
                     jjCheckNAdd(34);
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(247, 249);
                  break;
               case 35:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(35, 21);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(36, 37);
                  break;
               case 37:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if (curChar == 46)
                     jjCheckNAddStates(250, 252);
                  break;
               case 39:
                  if (curChar == 35)
                     jjCheckNAddStates(250, 252);
                  break;
               case 41:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(42);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(42, 21);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(43, 44);
                  break;
               case 44:
                  if (curChar == 46)
                     jjCheckNAddStates(253, 256);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(253, 256);
                  break;
               case 46:
                  if (curChar == 35)
                     jjCheckNAddStates(257, 259);
                  break;
               case 48:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(49);
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(49, 21);
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(260, 262);
                  break;
               case 51:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(51, 52);
                  break;
               case 53:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(54);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(54, 21);
                  break;
               case 55:
                  if (curChar == 45)
                     jjCheckNAddStates(164, 166);
                  break;
               case 56:
                  if (curChar == 46)
                     jjCheckNAdd(57);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(263, 266);
                  break;
               case 58:
                  if (curChar == 35)
                     jjCheckNAddStates(267, 269);
                  break;
               case 60:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(61);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(61, 21);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(60, 72);
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(270, 272);
                  break;
               case 64:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(64, 21);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(273, 275);
                  break;
               case 66:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(66, 67);
                  break;
               case 67:
                  if (curChar == 47)
                     jjCheckNAdd(68);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(276, 278);
                  break;
               case 69:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(69, 21);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(70, 71);
                  break;
               case 71:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(71, 72);
                  break;
               case 72:
                  if (curChar == 46)
                     jjCheckNAddStates(279, 281);
                  break;
               case 73:
                  if (curChar == 35)
                     jjCheckNAddStates(279, 281);
                  break;
               case 75:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(76);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(76, 21);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(77, 78);
                  break;
               case 78:
                  if (curChar == 46)
                     jjCheckNAddStates(282, 285);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(282, 285);
                  break;
               case 80:
                  if (curChar == 35)
                     jjCheckNAddStates(286, 288);
                  break;
               case 82:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(83);
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(83, 21);
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(289, 291);
                  break;
               case 85:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(85, 86);
                  break;
               case 87:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(88);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(88, 21);
                  break;
               case 90:
                  if (curChar == 32 && kind > 54)
                     kind = 54;
                  break;
               case 91:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(92, 93);
                  break;
               case 92:
                  jjCheckNAddTwoStates(92, 93);
                  break;
               case 93:
                  if (curChar == 34 && kind > 55)
                     kind = 55;
                  break;
               case 94:
                  if (curChar == 46)
                     jjCheckNAddStates(160, 163);
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(85, 87);
                  break;
               case 96:
                  if (curChar != 35)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(96, 97);
                  break;
               case 98:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(99);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(99);
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(81, 84);
                  break;
               case 101:
                  if (curChar == 35)
                     jjCheckNAddStates(292, 294);
                  break;
               case 103:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(104);
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(104, 105);
                  break;
               case 106:
                  if ((0x280000000000L & l) != 0L)
                     jjAddStates(295, 296);
                  break;
               case 107:
                  if (curChar == 46)
                     jjCheckNAdd(108);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(297, 299);
                  break;
               case 109:
                  if (curChar != 35)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(109, 110);
                  break;
               case 111:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(112);
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(112);
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(300, 311);
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(114, 115);
                  break;
               case 115:
                  if (curChar != 35)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(115);
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(312, 314);
                  break;
               case 117:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(117, 118);
                  break;
               case 118:
                  if (curChar == 47)
                     jjCheckNAdd(119);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(119, 120);
                  break;
               case 120:
                  if (curChar != 35)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(120);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(121, 122);
                  break;
               case 122:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(122, 123);
                  break;
               case 123:
                  if (curChar != 46)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(124, 125);
                  break;
               case 124:
                  if (curChar != 35)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(124, 125);
                  break;
               case 126:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(127);
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(127);
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(128, 129);
                  break;
               case 129:
                  if (curChar != 46)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(315, 317);
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(315, 317);
                  break;
               case 131:
                  if (curChar != 35)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(131, 132);
                  break;
               case 133:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(134);
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(134);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(318, 320);
                  break;
               case 136:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(136, 137);
                  break;
               case 138:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(139);
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(139);
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(77, 80);
                  break;
               case 141:
                  if (curChar == 35)
                     jjCheckNAddStates(321, 323);
                  break;
               case 143:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(144);
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(144, 145);
                  break;
               case 145:
                  if (curChar == 43)
                     jjCheckNAddStates(3, 5);
                  break;
               case 146:
                  if (curChar == 46)
                     jjCheckNAdd(147);
                  break;
               case 147:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(324, 327);
                  break;
               case 148:
                  if (curChar == 35)
                     jjCheckNAddStates(328, 330);
                  break;
               case 150:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(151);
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(151, 21);
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(331, 343);
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(344, 346);
                  break;
               case 154:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(154, 21);
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(347, 349);
                  break;
               case 156:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(156, 157);
                  break;
               case 157:
                  if (curChar == 47)
                     jjCheckNAdd(158);
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(350, 352);
                  break;
               case 159:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(159, 21);
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(160, 161);
                  break;
               case 161:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(161, 162);
                  break;
               case 162:
                  if (curChar == 46)
                     jjCheckNAddStates(353, 355);
                  break;
               case 163:
                  if (curChar == 35)
                     jjCheckNAddStates(353, 355);
                  break;
               case 165:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(166);
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(166, 21);
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(167, 168);
                  break;
               case 168:
                  if (curChar == 46)
                     jjCheckNAddStates(356, 359);
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(356, 359);
                  break;
               case 170:
                  if (curChar == 35)
                     jjCheckNAddStates(360, 362);
                  break;
               case 172:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(173);
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(173, 21);
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(363, 365);
                  break;
               case 175:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(175, 176);
                  break;
               case 177:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(178);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(178, 21);
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(73, 76);
                  break;
               case 180:
                  if (curChar == 35)
                     jjCheckNAddStates(366, 368);
                  break;
               case 182:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(183);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(183, 184);
                  break;
               case 184:
                  if (curChar == 45)
                     jjCheckNAddStates(0, 2);
                  break;
               case 185:
                  if (curChar == 46)
                     jjCheckNAdd(186);
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(369, 372);
                  break;
               case 187:
                  if (curChar == 35)
                     jjCheckNAddStates(373, 375);
                  break;
               case 189:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(190);
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(190, 21);
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(376, 388);
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(389, 391);
                  break;
               case 193:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(193, 21);
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(392, 394);
                  break;
               case 195:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(195, 196);
                  break;
               case 196:
                  if (curChar == 47)
                     jjCheckNAdd(197);
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(395, 397);
                  break;
               case 198:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(198, 21);
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(199, 200);
                  break;
               case 200:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(200, 201);
                  break;
               case 201:
                  if (curChar == 46)
                     jjCheckNAddStates(398, 400);
                  break;
               case 202:
                  if (curChar == 35)
                     jjCheckNAddStates(398, 400);
                  break;
               case 204:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(205);
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(205, 21);
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(206, 207);
                  break;
               case 207:
                  if (curChar == 46)
                     jjCheckNAddStates(401, 404);
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(401, 404);
                  break;
               case 209:
                  if (curChar == 35)
                     jjCheckNAddStates(405, 407);
                  break;
               case 211:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(212);
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(212, 21);
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(408, 410);
                  break;
               case 214:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(214, 215);
                  break;
               case 216:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(217);
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(217, 21);
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(88, 138);
                  break;
               case 219:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(219, 220);
                  break;
               case 220:
                  if (curChar != 35)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(220);
                  break;
               case 221:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(228, 230);
                  break;
               case 222:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(222, 223);
                  break;
               case 223:
                  if (curChar == 47)
                     jjCheckNAdd(224);
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(224, 225);
                  break;
               case 225:
                  if (curChar != 35)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(225);
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(226, 227);
                  break;
               case 227:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(227, 228);
                  break;
               case 228:
                  if (curChar != 46)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(229, 230);
                  break;
               case 229:
                  if (curChar != 35)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(229, 230);
                  break;
               case 231:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(232);
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(232);
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(233, 234);
                  break;
               case 234:
                  if (curChar != 46)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(198, 200);
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(198, 200);
                  break;
               case 236:
                  if (curChar != 35)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(236, 237);
                  break;
               case 238:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(239);
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(239);
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(225, 227);
                  break;
               case 241:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(241, 242);
                  break;
               case 243:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(244);
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(244);
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(222, 224);
                  break;
               case 246:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(246, 105);
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(219, 221);
                  break;
               case 248:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(248, 249);
                  break;
               case 249:
                  if (curChar == 47)
                     jjCheckNAdd(250);
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(411, 413);
                  break;
               case 251:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(251, 105);
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(252, 253);
                  break;
               case 253:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(253, 254);
                  break;
               case 254:
                  if (curChar == 46)
                     jjCheckNAddStates(414, 416);
                  break;
               case 255:
                  if (curChar == 35)
                     jjCheckNAddStates(414, 416);
                  break;
               case 257:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(258);
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(258, 105);
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(259, 260);
                  break;
               case 260:
                  if (curChar == 46)
                     jjCheckNAddStates(194, 197);
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(194, 197);
                  break;
               case 262:
                  if (curChar == 35)
                     jjCheckNAddStates(417, 419);
                  break;
               case 264:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(265);
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(265, 105);
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(216, 218);
                  break;
               case 267:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(267, 268);
                  break;
               case 269:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(270);
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(270, 105);
                  break;
               case 271:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(213, 215);
                  break;
               case 272:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(272, 145);
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(210, 212);
                  break;
               case 274:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(274, 275);
                  break;
               case 275:
                  if (curChar == 47)
                     jjCheckNAdd(276);
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(420, 422);
                  break;
               case 277:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(277, 145);
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(278, 279);
                  break;
               case 279:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(279, 280);
                  break;
               case 280:
                  if (curChar == 46)
                     jjCheckNAddStates(423, 425);
                  break;
               case 281:
                  if (curChar == 35)
                     jjCheckNAddStates(423, 425);
                  break;
               case 283:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(284);
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(284, 145);
                  break;
               case 285:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(285, 286);
                  break;
               case 286:
                  if (curChar == 46)
                     jjCheckNAddStates(190, 193);
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(190, 193);
                  break;
               case 288:
                  if (curChar == 35)
                     jjCheckNAddStates(426, 428);
                  break;
               case 290:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(291);
                  break;
               case 291:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(291, 145);
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(207, 209);
                  break;
               case 293:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(293, 294);
                  break;
               case 295:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(296);
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 145);
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(204, 206);
                  break;
               case 298:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(298, 184);
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(201, 203);
                  break;
               case 300:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(300, 301);
                  break;
               case 301:
                  if (curChar == 47)
                     jjCheckNAdd(302);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(429, 431);
                  break;
               case 303:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(303, 184);
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(304, 305);
                  break;
               case 305:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(305, 306);
                  break;
               case 306:
                  if (curChar == 46)
                     jjCheckNAddStates(432, 434);
                  break;
               case 307:
                  if (curChar == 35)
                     jjCheckNAddStates(432, 434);
                  break;
               case 309:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(310);
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(310, 184);
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(311, 312);
                  break;
               case 312:
                  if (curChar == 46)
                     jjCheckNAddStates(183, 186);
                  break;
               case 313:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(183, 186);
                  break;
               case 314:
                  if (curChar == 35)
                     jjCheckNAddStates(435, 437);
                  break;
               case 316:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(317);
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(317, 184);
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(187, 189);
                  break;
               case 319:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(319, 320);
                  break;
               case 321:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(322);
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 184);
                  break;
               case 323:
                  if ((0x280000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddStates(139, 146);
                  break;
               case 324:
                  if (curChar == 46)
                     jjCheckNAdd(95);
                  break;
               case 325:
                  if (curChar == 46)
                     jjCheckNAdd(100);
                  break;
               case 326:
                  if (curChar == 46)
                     jjCheckNAdd(140);
                  break;
               case 327:
                  if (curChar == 46)
                     jjCheckNAdd(179);
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(47, 59);
                  break;
               case 329:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(34, 46);
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(21, 33);
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(6, 17);
                  break;
               case 332:
                  if (curChar == 35)
                     jjCheckNAddStates(147, 159);
                  break;
               case 334:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAddStates(139, 146);
                  break;
               case 335:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(336, 337);
                  break;
               case 342:
                  if (curChar == 35)
                     jjCheckNAddStates(438, 441);
                  break;
               case 349:
                  if (kind > 54)
                     kind = 54;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 353:
                  if ((0x47fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAdd(14);
                  }
                  else if (curChar == 64)
                     jjAddStates(442, 444);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 184);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 145);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(270, 105);
                  if ((0x7e00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(244);
                  }
                  break;
               case 0:
                  if ((0x7e00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(6, 17);
                  }
                  else if (curChar == 105)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(21, 33);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(34, 46);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(47, 59);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(60, 72);
                  break;
               case 16:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(73, 76);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(77, 80);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(81, 84);
                  if ((0x7e00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(85, 87);
                  }
                  break;
               case 5:
                  if ((0x47fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAdd(14);
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 90;
                  else if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 6;
                  if ((0x7e00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(88, 138);
                  }
                  break;
               case 19:
                  if ((0x10004000100040L & l) != 0L)
                  {
                     if (kind > 52)
                        kind = 52;
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 349;
                  else if (curChar == 120)
                     jjCheckNAddStates(445, 449);
                  else if (curChar == 100)
                     jjCheckNAddStates(445, 449);
                  else if (curChar == 111)
                     jjCheckNAddStates(445, 449);
                  else if (curChar == 98)
                     jjCheckNAddStates(445, 449);
                  else if (curChar == 101)
                     jjCheckNAddStates(450, 455);
                  else if (curChar == 105)
                     jjCheckNAddStates(450, 455);
                  if (curChar == 101)
                     jjCheckNAddStates(445, 449);
                  else if (curChar == 105)
                     jjCheckNAddStates(445, 449);
                  else if (curChar == 120)
                     jjCheckNAddStates(456, 461);
                  else if (curChar == 100)
                     jjCheckNAddStates(456, 461);
                  else if (curChar == 111)
                     jjCheckNAddStates(456, 461);
                  else if (curChar == 98)
                     jjCheckNAddStates(456, 461);
                  break;
               case 351:
                  if ((0x47fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAdd(14);
                  }
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 184);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 145);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(270, 105);
                  if ((0x7e00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(244);
                  }
                  break;
               case 22:
                  if ((0x7e00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddStates(6, 17);
                  }
                  else if (curChar == 105)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(21, 33);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(34, 46);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(47, 59);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(170, 182);
                  break;
               case 352:
                  if ((0x47fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAdd(14);
                  }
                  else if (curChar == 64)
                     jjAddStates(442, 444);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 184);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(187, 189);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(311, 312);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(304, 305);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(201, 203);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(204, 206);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 145);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(207, 209);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(285, 286);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(278, 279);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(210, 212);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(213, 215);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(270, 105);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(216, 218);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(259, 260);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(252, 253);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(219, 221);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(222, 224);
                  if ((0x7e00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(244);
                  }
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(225, 227);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(233, 234);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(226, 227);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(228, 230);
                  if ((0x7e00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddTwoStates(219, 220);
                  }
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(321, 322);
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(295, 296);
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(269, 270);
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(243, 244);
                  break;
               case 350:
                  if ((0x47fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 47)
                        kind = 47;
                     jjCheckNAdd(14);
                  }
                  else if (curChar == 64)
                     jjAddStates(442, 444);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(187, 189);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(311, 312);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(304, 305);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(201, 203);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(204, 206);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(207, 209);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(285, 286);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(278, 279);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(210, 212);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(213, 215);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(216, 218);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(259, 260);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(252, 253);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(219, 221);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(222, 224);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(225, 227);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(233, 234);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(226, 227);
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(228, 230);
                  if ((0x7e00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAddTwoStates(219, 220);
                  }
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(321, 322);
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(295, 296);
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(269, 270);
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(243, 244);
                  break;
               case 1:
                  jjAddStates(18, 20);
                  break;
               case 7:
                  jjCheckNAddTwoStates(7, 8);
                  break;
               case 9:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(10, 8);
                  break;
               case 10:
                  jjCheckNAddTwoStates(10, 8);
                  break;
               case 11:
                  if (curChar == 125 && kind > 46)
                     kind = 46;
                  break;
               case 12:
                  if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 13:
                  if ((0x47fffffec7fffffeL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAdd(14);
                  break;
               case 14:
                  if ((0x47fffffec7fffffeL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAdd(14);
                  break;
               case 21:
                  if (curChar == 105 && kind > 53)
                     kind = 53;
                  break;
               case 23:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(234, 237);
                  break;
               case 25:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(26, 27);
                  break;
               case 27:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(27, 21);
                  break;
               case 28:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(170, 182);
                  break;
               case 29:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(241, 243);
                  break;
               case 31:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(244, 246);
                  break;
               case 34:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(247, 249);
                  break;
               case 36:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(36, 37);
                  break;
               case 40:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(41, 42);
                  break;
               case 42:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(42, 21);
                  break;
               case 43:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(43, 44);
                  break;
               case 45:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(253, 256);
                  break;
               case 47:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(49, 21);
                  break;
               case 50:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(260, 262);
                  break;
               case 52:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(53, 54);
                  break;
               case 54:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(54, 21);
                  break;
               case 57:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(263, 266);
                  break;
               case 59:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(60, 61);
                  break;
               case 61:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(61, 21);
                  break;
               case 62:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(60, 72);
                  break;
               case 63:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(270, 272);
                  break;
               case 65:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(273, 275);
                  break;
               case 68:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(276, 278);
                  break;
               case 70:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(70, 71);
                  break;
               case 74:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(75, 76);
                  break;
               case 76:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(76, 21);
                  break;
               case 77:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(77, 78);
                  break;
               case 79:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(282, 285);
                  break;
               case 81:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(82, 83);
                  break;
               case 83:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(83, 21);
                  break;
               case 84:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(289, 291);
                  break;
               case 86:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(87, 88);
                  break;
               case 88:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(88, 21);
                  break;
               case 89:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 90:
                  if (curChar == 110 && kind > 54)
                     kind = 54;
                  break;
               case 92:
                  jjAddStates(462, 463);
                  break;
               case 95:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(85, 87);
                  break;
               case 97:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(98, 99);
                  break;
               case 99:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(99);
                  break;
               case 100:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(81, 84);
                  break;
               case 102:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(103, 104);
                  break;
               case 104:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(104, 105);
                  break;
               case 105:
                  if (curChar == 64)
                     jjAddStates(442, 444);
                  break;
               case 108:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjAddStates(297, 299);
                  break;
               case 110:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(111, 112);
                  break;
               case 112:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(112);
                  break;
               case 113:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(300, 311);
                  break;
               case 114:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(114, 115);
                  break;
               case 116:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(312, 314);
                  break;
               case 119:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjAddStates(464, 465);
                  break;
               case 121:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(121, 122);
                  break;
               case 125:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(126, 127);
                  break;
               case 127:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(127);
                  break;
               case 128:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(128, 129);
                  break;
               case 130:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjAddStates(315, 317);
                  break;
               case 132:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(133, 134);
                  break;
               case 134:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(134);
                  break;
               case 135:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(318, 320);
                  break;
               case 137:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 139);
                  break;
               case 139:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(139);
                  break;
               case 140:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(77, 80);
                  break;
               case 142:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(143, 144);
                  break;
               case 144:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(144, 145);
                  break;
               case 147:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(324, 327);
                  break;
               case 149:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(150, 151);
                  break;
               case 151:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(151, 21);
                  break;
               case 152:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(331, 343);
                  break;
               case 153:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(344, 346);
                  break;
               case 155:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(347, 349);
                  break;
               case 158:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(350, 352);
                  break;
               case 160:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(160, 161);
                  break;
               case 164:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(165, 166);
                  break;
               case 166:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(166, 21);
                  break;
               case 167:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(167, 168);
                  break;
               case 169:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(356, 359);
                  break;
               case 171:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(172, 173);
                  break;
               case 173:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(173, 21);
                  break;
               case 174:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(363, 365);
                  break;
               case 176:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(177, 178);
                  break;
               case 178:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(178, 21);
                  break;
               case 179:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(73, 76);
                  break;
               case 181:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(182, 183);
                  break;
               case 183:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(183, 184);
                  break;
               case 186:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(369, 372);
                  break;
               case 188:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(189, 190);
                  break;
               case 190:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(190, 21);
                  break;
               case 191:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(376, 388);
                  break;
               case 192:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(389, 391);
                  break;
               case 194:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(392, 394);
                  break;
               case 197:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(395, 397);
                  break;
               case 199:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(199, 200);
                  break;
               case 203:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(204, 205);
                  break;
               case 205:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(205, 21);
                  break;
               case 206:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(206, 207);
                  break;
               case 208:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(401, 404);
                  break;
               case 210:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(211, 212);
                  break;
               case 212:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(212, 21);
                  break;
               case 213:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(408, 410);
                  break;
               case 215:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(216, 217);
                  break;
               case 217:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(217, 21);
                  break;
               case 218:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(88, 138);
                  break;
               case 219:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddTwoStates(219, 220);
                  break;
               case 221:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(228, 230);
                  break;
               case 224:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjAddStates(466, 467);
                  break;
               case 226:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(226, 227);
                  break;
               case 230:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(231, 232);
                  break;
               case 232:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(232);
                  break;
               case 233:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(233, 234);
                  break;
               case 235:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjAddStates(198, 200);
                  break;
               case 237:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(238, 239);
                  break;
               case 239:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(239);
                  break;
               case 240:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(225, 227);
                  break;
               case 242:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(243, 244);
                  break;
               case 244:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(244);
                  break;
               case 245:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(222, 224);
                  break;
               case 247:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(219, 221);
                  break;
               case 250:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(411, 413);
                  break;
               case 252:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(252, 253);
                  break;
               case 256:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(257, 258);
                  break;
               case 258:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(258, 105);
                  break;
               case 259:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(259, 260);
                  break;
               case 261:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(194, 197);
                  break;
               case 263:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(264, 265);
                  break;
               case 265:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(265, 105);
                  break;
               case 266:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(216, 218);
                  break;
               case 268:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(269, 270);
                  break;
               case 270:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(270, 105);
                  break;
               case 271:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(213, 215);
                  break;
               case 273:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(210, 212);
                  break;
               case 276:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(420, 422);
                  break;
               case 278:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(278, 279);
                  break;
               case 282:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(283, 284);
                  break;
               case 284:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(284, 145);
                  break;
               case 285:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(285, 286);
                  break;
               case 287:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(190, 193);
                  break;
               case 289:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(290, 291);
                  break;
               case 291:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(291, 145);
                  break;
               case 292:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(207, 209);
                  break;
               case 294:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(295, 296);
                  break;
               case 296:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 145);
                  break;
               case 297:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(204, 206);
                  break;
               case 299:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(201, 203);
                  break;
               case 302:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(429, 431);
                  break;
               case 304:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(304, 305);
                  break;
               case 308:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(309, 310);
                  break;
               case 310:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(310, 184);
                  break;
               case 311:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(311, 312);
                  break;
               case 313:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(183, 186);
                  break;
               case 315:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(316, 317);
                  break;
               case 317:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(317, 184);
                  break;
               case 318:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(187, 189);
                  break;
               case 320:
                  if ((0x8107000000000L & l) != 0L)
                     jjCheckNAddTwoStates(321, 322);
                  break;
               case 322:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 184);
                  break;
               case 328:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(47, 59);
                  break;
               case 329:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(34, 46);
                  break;
               case 330:
                  if ((0x7e00000000L & l) != 0L)
                     jjCheckNAddStates(21, 33);
                  break;
               case 331:
                  if ((0x7e00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(6, 17);
                  break;
               case 333:
                  if (curChar == 98)
                     jjCheckNAddStates(456, 461);
                  break;
               case 336:
                  if (curChar == 105)
                     jjCheckNAddStates(445, 449);
                  break;
               case 337:
                  if (curChar == 101)
                     jjCheckNAddStates(445, 449);
                  break;
               case 338:
                  if (curChar == 111)
                     jjCheckNAddStates(456, 461);
                  break;
               case 339:
                  if (curChar == 100)
                     jjCheckNAddStates(456, 461);
                  break;
               case 340:
                  if (curChar == 120)
                     jjCheckNAddStates(456, 461);
                  break;
               case 341:
                  if (curChar == 105)
                     jjCheckNAddStates(450, 455);
                  break;
               case 343:
                  if (curChar == 98)
                     jjCheckNAddStates(445, 449);
                  break;
               case 344:
                  if (curChar == 111)
                     jjCheckNAddStates(445, 449);
                  break;
               case 345:
                  if (curChar == 100)
                     jjCheckNAddStates(445, 449);
                  break;
               case 346:
                  if (curChar == 120)
                     jjCheckNAddStates(445, 449);
                  break;
               case 347:
                  if (curChar == 101)
                     jjCheckNAddStates(450, 455);
                  break;
               case 348:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 349:
                  if (kind > 54)
                     kind = 54;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(18, 20);
                  break;
               case 7:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 9:
               case 10:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddTwoStates(10, 8);
                  break;
               case 92:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(462, 463);
                  break;
               case 349:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 54)
                     kind = 54;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 350 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   21, 185, 191, 21, 146, 152, 219, 220, 221, 222, 223, 226, 227, 233, 234, 240, 
   241, 242, 1, 2, 4, 245, 246, 247, 248, 249, 252, 253, 259, 260, 266, 267, 
   268, 105, 271, 272, 273, 274, 275, 278, 279, 285, 286, 292, 293, 294, 145, 297, 
   298, 299, 300, 301, 304, 305, 311, 312, 318, 319, 320, 184, 63, 64, 65, 66, 
   67, 70, 71, 77, 78, 84, 85, 86, 21, 179, 180, 181, 184, 140, 141, 142, 
   145, 100, 101, 102, 105, 95, 96, 97, 219, 220, 221, 222, 223, 226, 227, 233, 
   234, 240, 241, 242, 245, 246, 247, 248, 249, 252, 253, 259, 260, 266, 267, 268, 
   105, 271, 272, 273, 274, 275, 278, 279, 285, 286, 292, 293, 294, 145, 297, 298, 
   299, 300, 301, 304, 305, 311, 312, 318, 319, 320, 184, 324, 325, 326, 327, 328, 
   329, 330, 331, 333, 338, 339, 340, 336, 337, 341, 347, 343, 344, 345, 346, 348, 
   95, 100, 140, 179, 21, 56, 62, 21, 22, 28, 29, 30, 31, 32, 33, 36, 
   37, 43, 44, 50, 51, 52, 21, 313, 314, 315, 184, 318, 319, 320, 287, 288, 
   289, 145, 261, 262, 263, 105, 235, 236, 237, 299, 300, 301, 297, 298, 184, 292, 
   293, 294, 273, 274, 275, 271, 272, 145, 266, 267, 268, 247, 248, 249, 245, 246, 
   105, 240, 241, 242, 221, 222, 223, 8, 9, 11, 23, 24, 25, 21, 24, 25, 
   21, 29, 30, 21, 31, 32, 33, 34, 35, 21, 39, 40, 21, 45, 46, 47, 
   21, 46, 47, 21, 50, 51, 52, 57, 58, 59, 21, 58, 59, 21, 63, 64, 
   21, 65, 66, 67, 68, 69, 21, 73, 74, 21, 79, 80, 81, 21, 80, 81, 
   21, 84, 85, 86, 101, 102, 105, 107, 113, 108, 109, 110, 114, 115, 116, 117, 
   118, 121, 122, 128, 129, 135, 136, 137, 116, 117, 118, 130, 131, 132, 135, 136, 
   137, 141, 142, 145, 147, 148, 149, 21, 148, 149, 21, 153, 154, 155, 156, 157, 
   160, 161, 167, 168, 174, 175, 176, 21, 153, 154, 21, 155, 156, 157, 158, 159, 
   21, 163, 164, 21, 169, 170, 171, 21, 170, 171, 21, 174, 175, 176, 180, 181, 
   184, 186, 187, 188, 21, 187, 188, 21, 192, 193, 194, 195, 196, 199, 200, 206, 
   207, 213, 214, 215, 21, 192, 193, 21, 194, 195, 196, 197, 198, 21, 202, 203, 
   21, 208, 209, 210, 21, 209, 210, 21, 213, 214, 215, 250, 251, 105, 255, 256, 
   105, 262, 263, 105, 276, 277, 145, 281, 282, 145, 288, 289, 145, 302, 303, 184, 
   307, 308, 184, 314, 315, 184, 343, 344, 345, 346, 106, 107, 113, 20, 55, 334, 
   94, 218, 20, 55, 334, 94, 218, 342, 20, 55, 334, 94, 218, 335, 92, 93, 
   119, 120, 224, 225, 
};
public static final String[] jjstrLiteralImages = {
"", "\53", "\55", "\41", "\44", "\45", "\46", "\52", "\57", "\72", "\74", 
"\75", "\76", "\77", "\176", "\137", "\136", "\56", "\75\76", "\142\145\147\151\156", 
"\154\145\164", "\154\145\164\162\145\143", "\144\145\146\151\156\145", 
"\161\165\157\164\145", "\154\141\155\142\144\141", "\151\146", "\163\145\164\41", "\144\157", 
"\157\162", "\141\156\144", "\143\157\156\144", "\145\154\163\145", "\143\141\163\145", 
"\144\145\154\141\171", "\43\164", "\43\146", "\47", "\140", "\54", "\54\100", "\100", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\50", "\51", "\43\50", };
public static final String[] lexStateNames = {
   "DEFAULT", 
};
static final long[] jjtoToken = {
   0xf081ffffffffffL, 0x380L, 
};
static final long[] jjtoSkip = {
   0x7e0000000000L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x7e0000000000L, 0x0L, 
};
protected CharStream input_stream;
private final int[] jjrounds = new int[350];
private final int[] jjstateSet = new int[700];
protected char curChar;
public Scheme2ParserTokenManager(CharStream stream){
   input_stream = stream;
}
public Scheme2ParserTokenManager(CharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(CharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 350; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(CharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   t.offset = input_stream.getOffset();
   t.length = input_stream.getLength();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

}
