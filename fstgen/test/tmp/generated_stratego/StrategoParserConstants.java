/* Generated By:JavaCC: Do not edit this line. StrategoParserConstants.java */
package tmp.generated_stratego;

public interface StrategoParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 9;
  int FORMAL_COMMENT = 10;
  int MULTI_LINE_COMMENT = 11;
  int ALL = 13;
  int CONSTRUCTORS = 14;
  int FAIL = 15;
  int ID = 16;
  int IN = 17;
  int LET = 18;
  int MODULE = 19;
  int NOT = 20;
  int ONE = 21;
  int ON = 22;
  int CALL = 23;
  int PROCEED = 24;
  int SIGNATURES = 25;
  int SPECIFICATION = 26;
  int WITH = 27;
  int OVERLAYS = 28;
  int PRIM = 29;
  int RULES = 30;
  int SCRIPT = 31;
  int SIGNATURE = 32;
  int SOME = 33;
  int SORTS = 34;
  int STRATEGIES = 35;
  int STRATEGO = 36;
  int TEST = 37;
  int WHERE = 38;
  int IMPORTTERM = 39;
  int IMPORTS = 40;
  int EXPORTS = 41;
  int CASE = 42;
  int ELSE = 43;
  int END = 44;
  int EXTERNAL = 45;
  int IF = 46;
  int OTHERWISE = 47;
  int REC = 48;
  int SWITCH = 49;
  int THEN = 50;
  int EXTEND = 51;
  int OVERRIDE = 52;
  int INTERNAL = 53;
  int SEALED = 54;
  int EXTENSIBLE = 55;
  int OVERRIDABLE = 56;
  int INTEGER_LITERAL = 57;
  int DECIMAL_LITERAL = 58;
  int HEX_LITERAL = 59;
  int OCTAL_LITERAL = 60;
  int FLOATING_POINT_LITERAL = 61;
  int EXPONENT = 62;
  int CHARACTER_LITERAL = 63;
  int STRING_LITERAL = 64;
  int IDENTIFIER = 65;
  int LETTER = 66;
  int LCCHAR = 67;
  int UCCHAR = 68;
  int APOSTROPHE = 69;
  int DOT = 70;
  int LOWLINE = 71;
  int MINUS = 72;
  int DIGIT = 73;
  int LPAREN = 74;
  int RPAREN = 75;
  int LBRACE = 76;
  int RBRACE = 77;
  int LBRACKET = 78;
  int RBRACKET = 79;
  int COMMA = 80;
  int PLUS = 81;
  int STAR = 82;
  int SLASH = 83;

  int DEFAULT = 0;
  int IN_SINGLE_LINE_COMMENT = 1;
  int IN_FORMAL_COMMENT = 2;
  int IN_MULTI_LINE_COMMENT = 3;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 12>",
    "\"all\"",
    "\"constructors\"",
    "\"fail\"",
    "\"id\"",
    "\"in\"",
    "\"let\"",
    "\"module\"",
    "\"not\"",
    "\"one\"",
    "\"on\"",
    "\"call\"",
    "\"proceed\"",
    "\"signatures\"",
    "\"specification\"",
    "\"with\"",
    "\"overlays\"",
    "\"prim\"",
    "\"rules\"",
    "\"script\"",
    "\"signature\"",
    "\"some\"",
    "\"sorts\"",
    "\"strategies\"",
    "\"stratego\"",
    "\"test\"",
    "\"where\"",
    "\"import-term\"",
    "\"imports\"",
    "\"exports\"",
    "\"case\"",
    "\"else\"",
    "\"end\"",
    "\"external\"",
    "\"if\"",
    "\"otherwise\"",
    "\"rec\"",
    "\"switch\"",
    "\"then\"",
    "\"extend\"",
    "\"override\"",
    "\"internal\"",
    "\"sealed\"",
    "\"extensible\"",
    "\"overrideable\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<LCCHAR>",
    "<UCCHAR>",
    "<APOSTROPHE>",
    "<DOT>",
    "<LOWLINE>",
    "<MINUS>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\":\"",
    "\"|\"",
    "\"->\"",
    "\"?\"",
    "\"!\"",
    "\"<\"",
    "\">\"",
    "\"\\\\\"",
    "\":=\"",
    "\"{|\"",
    "\"|}\"",
    "\"\\\\*\"",
    "\"~\"",
    "\":-\"",
    "\":+\"",
    "\":+=\"",
    "\"depends \"",
    "\"{^\"",
    "\"@\"",
  };

}
