/* Generated By:JavaCC: Do not edit this line. StrategoParserConstants.java */
package tmp.generated_stratego;

public interface StrategoParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 9;
  int FORMAL_COMMENT = 10;
  int MULTI_LINE_COMMENT = 11;
  int MODULE = 13;
  int SPECIFICATION = 14;
  int IMPORTS = 15;
  int SORTS = 16;
  int LEFT = 17;
  int ASSOC = 18;
  int AVOID = 19;
  int RIGHT = 20;
  int PREFER = 21;
  int BRACKET = 22;
  int REJECT = 23;
  int NONASSOC = 24;
  int RECOVER = 25;
  int DEPRECATED = 26;
  int INDENTPADDING = 27;
  int ALL = 28;
  int CONSTRUCTORS = 29;
  int FAIL = 30;
  int ID = 31;
  int IN = 32;
  int LET = 33;
  int NOT = 34;
  int ONE = 35;
  int DEPENDS = 36;
  int ON = 37;
  int CALL = 38;
  int PROCEED = 39;
  int SIGNATURES = 40;
  int WITH = 41;
  int OVERLAYS = 42;
  int PRIM = 43;
  int RULES = 44;
  int SIGNATURE = 45;
  int SOME = 46;
  int STRATEGIES = 47;
  int STRATEGO = 48;
  int TEST = 49;
  int WHERE = 50;
  int IMPORTTERM = 51;
  int CASE = 52;
  int ELSE = 53;
  int END = 54;
  int EXTERNAL = 55;
  int IF = 56;
  int OTHERWISE = 57;
  int REC = 58;
  int SWITCH = 59;
  int THEN = 60;
  int EXTEND = 61;
  int OVERRIDE = 62;
  int INTERNAL = 63;
  int SEALED = 64;
  int EXTENSIBLE = 65;
  int OVERRIDABLE = 66;
  int INTEGER_LITERAL = 67;
  int DECIMAL_LITERAL = 68;
  int HEX_LITERAL = 69;
  int OCTAL_LITERAL = 70;
  int FLOATING_POINT_LITERAL = 71;
  int EXPONENT = 72;
  int CHARACTER_LITERAL = 73;
  int STRING_LITERAL = 74;
  int STRING_QUOT = 75;
  int STRING_QUOT_END = 76;
  int IN_STRING_QUOT = 77;
  int IN_STRING_QUOT_END = 78;
  int IDENTIFIER = 81;
  int LETTER = 82;
  int LCCHAR = 83;
  int UCCHAR = 84;
  int DIGIT = 85;
  int LPAREN = 86;
  int RPAREN = 87;
  int LBRACE = 88;
  int RBRACE = 89;
  int LBRACKET = 90;
  int RBRACKET = 91;
  int LT = 92;
  int GT = 93;
  int PLUS = 94;
  int MINUS = 95;
  int STAR = 96;
  int SLASH = 97;
  int COMMA = 98;
  int SEMICOLON = 99;
  int DDOT = 100;
  int DOT = 101;
  int QUESTIONMARK = 102;
  int EXCLAMATIONMARK = 103;
  int NUMBERSIGN = 104;
  int AT = 105;
  int DOLLAR = 106;
  int VERTICALLINE = 107;
  int TILDE = 108;
  int AMPERSAND = 109;
  int PERCENTAGE = 110;
  int CIRCUMFLEXACCENT = 111;
  int GRAVEACCENT = 112;
  int APOSTROPHE = 113;
  int ARROW = 114;
  int ASSIGN = 115;
  int LOWLINE = 116;
  int QUOTATIONMARK = 117;
  int BACKSLASH = 118;

  int DEFAULT = 0;
  int IN_SINGLE_LINE_COMMENT = 1;
  int IN_FORMAL_COMMENT = 2;
  int IN_MULTI_LINE_COMMENT = 3;
  int STATEONE = 4;
  int STATETWO = 5;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 12>",
    "\"module\"",
    "\"specification\"",
    "\"imports\"",
    "\"sorts\"",
    "\"left\"",
    "\"assoc\"",
    "\"avoid\"",
    "\"right\"",
    "\"prefer\"",
    "\"bracket\"",
    "\"reject\"",
    "\"non-assoc\"",
    "\"recover\"",
    "\"deprecated\"",
    "\"indentpadding\"",
    "\"all\"",
    "\"constructors\"",
    "\"fail\"",
    "\"id\"",
    "\"in\"",
    "\"let\"",
    "\"not\"",
    "\"one\"",
    "\"depends\"",
    "\"on\"",
    "\"call\"",
    "\"proceed\"",
    "\"signatures\"",
    "\"with\"",
    "\"overlays\"",
    "\"prim\"",
    "\"rules\"",
    "\"signature\"",
    "\"some\"",
    "\"strategies\"",
    "\"stratego\"",
    "\"test\"",
    "\"where\"",
    "\"import-term\"",
    "\"case\"",
    "\"else\"",
    "\"end\"",
    "\"external\"",
    "\"if\"",
    "\"otherwise\"",
    "\"rec\"",
    "\"switch\"",
    "\"then\"",
    "\"extend\"",
    "\"override\"",
    "\"internal\"",
    "\"sealed\"",
    "\"extensible\"",
    "\"overrideable\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<STRING_QUOT>",
    "\"]\"",
    "\"[\"",
    "\"]\"",
    "<token of kind 79>",
    "<token of kind 80>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<LCCHAR>",
    "<UCCHAR>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"<\"",
    "\">\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\".\"",
    "\"?\"",
    "\"!\"",
    "\"#\"",
    "\"@\"",
    "\"$\"",
    "\"|\"",
    "\"~\"",
    "\"&\"",
    "\"%\"",
    "\"^\"",
    "\"`\"",
    "\"\\\'\"",
    "\"->\"",
    "\"=\"",
    "\"_\"",
    "\"\\\"\"",
    "\"\\\\\"",
    "\"{|\"",
    "\"|}\"",
    "\":=\"",
    "\"=>\"",
    "\"<+\"",
    "\"+>\"",
    "\":+\"",
    "\":-\"",
    "\":+=\"",
    "\"{^\"",
  };

}
